@go.Package { name = "github.com/pipelane/pipelaner/gen/source/transform" }
module com.pipelaner.source.transforms

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.9.0#/go.pkl"


abstract class Transform {
  name: String(!isEmpty)
  fixed sourceName: String(!isEmpty)
  inputs: Listing<String>(length > 0)
  threads: UInt(this >= 1) = read?("env:GOMAXPROCS")?.toInt() ?? 8
  outputBufferSize: UInt(this >= 1) = 10 * threads
}

class Sequencer extends Transform {
  fixed sourceName = "sequencer"
  isSequencer:Boolean = true
}

class Batch extends Transform {
  fixed sourceName = "batch"
  size: UInt(this < 0)
}

class Chunk extends Transform {
  fixed sourceName = "chunks"
  maxChunkSize: UInt(this > 0)
  maxIdleTime: Duration
}

class Debounce extends Transform {
  fixed sourceName = "debounce"
  interval: Duration
}

class Throttling extends Transform {
  fixed sourceName = "throttling"
  interval: Duration
}

class Filter extends Transform {
  fixed sourceName = "filter"
  code: String
}

class Remap extends Transform {
  fixed sourceName = "remap"
  code: String
}