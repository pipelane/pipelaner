@go.Package { name = "github.com/pipelane/pipelaner/gen/source/sink" }
module com.pipelaner.source.sinks

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.11.1#/go.pkl"
import ".../source/Common.pkl"
import ".../settings/logger/LoggerConfig.pkl"

abstract class Sink {
  name: String(!isEmpty)
  fixed sourceName: String(!isEmpty)
  inputs: Listing<String>(length > 0)
  threads: UInt(this >= 1) = read?("env:GOMAXPROCS")?.toInt() ?? 8
}

class Console extends Sink {
  fixed sourceName = "console"
  logFormat: LoggerConfig.LogFormat = "plain"
}

class Pipelaner extends Sink {
  fixed sourceName = "pipelaner"
  commonConfig: Common.Pipelaner
}

class Kafka extends Sink {
  fixed sourceName = "kafka"
  common: Common.Kafka
  maxRequestSize: DataSize = 10.mib
  lingerMs: Duration = 0.ms
  batchNumMessages: Int = 100_000
}

class Clickhouse extends Sink {
  fixed sourceName = "clickhouse"
  credentials: Common.ChCredentials
  tableName: String(!isEmpty)
  asyncInsert: String = "1"
  waitForAsyncInsert: String = "1"
  maxPartitionsPerInsertBlock: Int = 1000
}

typealias Method = "PATCH"|"POST"|"PUT"|"DELETE"|"GET"
class Http extends Sink {
  fixed sourceName = "http"
  url: String(!isEmpty)
  method: Method
  headers: Mapping<String, String>?
}